一.滚动用到的方法
1.clientHeight
	可视区域高度，不含边框。
2.offsetHeight
	可视高度，含边框。
3.scrollHeight
	滚动最大高度。对于body和dom对象高度计算也是不同的.位置不同，获取同一个元素结果也不相同。
4.dom.scrollTop()返回当前滚动值(0-scrollHeight)
5.判断是否到底部
	scrollHeight == dom.scrollHeight + clientHeight;


二.JSON对于不同数组的表现
1.关联数组
	(1).php代码
		<code>
				$arr = array('name'=>'name1',
										'filed'=>'filed1');
			  $str = json_encode($arr);
				echo $str;
		</code>
  (2).javascript 获取内容
		<code>
			$.get(url,
					function(result){
						var data = JSON.parse(result);
						//获取方式,转化成JSON后是对象不是数组
						alert(data.name);
					});
		</code>
2.索引数组
	(1).php代码
		<code>
			$arr = array('dawen','dawen1','dawen2','dawen3');
			$str = json_encode($arr);
			echo $str;
		</code>
 	(2).javascript 获取内容
		<code>
			$.post(url,
						data,
						function(result){
							var data = JSON.parse(result);
							//获取方式,转化成JSON后以数组方式访问而不是对象
							alert(data[index]);
						});
		</code>

三.input元素类型为number时获取的value不是数字，而是字符串需要转化，转化函数:parseInt(val);

四.flex 显示
	<code>
		<style>
			domParent{
				display:flex;
				flex-direction:row|column;			//主轴定义
				justify-content:flex-start|center|flex-end  //主轴方向对齐
				align-items:同上			//垂直方向定义
				flex-wrap:nowrap|wrap|wrapreverse
				flex-flow:flex-direction,flex-wrap;(联合属性)	
			}

			childDom{
				order:number		//排列顺序，数字小越靠前可以为负数
				flex-grow:大于等于0 	//放大比例，父元素有空余空间时才有用，数字越大放大越厉害
				flex-shrink:大于等于0	 //缩小比例，父元素空间不够时才会起到作用，数字大挤压越厉害
				flex-basic:<length>|auto	元素宽度，如设置直接取代width设置。
				flex:flex-grow flex-shrink flex-basic (复合属性);
				align-self:区别父元素的对齐方式
			}
		</style>
	</code>
	2.javascript 隐藏显示 flex元素
		<code>
			$('dom').css('display','none');		//隐藏元素
			$('dom').css('display','flex');		//显示元素
		</code>
